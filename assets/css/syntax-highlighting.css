@import "tailwindcss";
@import "./theme.css";

/* ** code elements */

pre {
  @apply overflow-x-auto;
}

code {
  @apply dwr-font-fixed;
  @apply font-extralight;

  @apply bg-syd12;
  @apply dark:bg-nord19;

  @apply border-syd12;
  @apply dark:border-nord5;

  @apply text-syd10;
  @apply dark:text-nord11;
}

li code {
  @apply px-1;
  @apply border;
  @apply rounded;
}

p code {
  @apply px-1;
  @apply border;
  @apply rounded;
}

div.highlight {
  @apply mb-4;
  @apply mx-4;
  @apply py-2;
  @apply px-4;
  @apply border;
  @apply rounded;

  @apply bg-syd12;
  @apply dark:bg-nord19;

  @apply border-syd2;
  @apply dark:border-nord5;
}

pre.chroma {
  @apply bg-syd12;
  @apply dark:bg-nord19;
}

/* ** chromastyles classes */

/* Generated using: hugo gen chromastyles --style=xcode

/*
 * The DOM looks like this:
 *
 * <div class="highlight">
 *   <pre class="chroma">
 *     <code class="language-kotlin" data-lang="kotlin">
 *       <span class="line">
 *         <span class="cl">
 *           <span class="k">enum</span>
 *
 * Which means that it is possible to customize the color scheme per language
 * using the attribute selector: `code[data-lang="kotlin"] {`
 */

/* Background */ .bg {
  @apply bg-syd1;
  @apply dark:bg-nord1;

  @apply text-syd3;
  @apply dark:text-nord3;
}

/* PreWrapper */ .chroma {
  @apply bg-syd1;
  @apply dark:bg-nord1;

  @apply text-syd3;
  @apply dark:text-nord3;
}

/* Other */ .chroma .x {
  /* Intentionally empty */
}

/* Error */ .chroma .err {
  @apply text-syd4;
  @apply dark:text-nord4;
}
/* CodeLine */ .chroma .cl {
  /* Intentionally empty */
}

/* LineLink */ .chroma .lnlinks {
  outline: none;
  text-decoration: none;
  color: inherit;
}

/* LineTableTD */ .chroma .lntd {
  vertical-align: top;
  padding: 0;
  margin: 0;
  border: 0;
}

/* LineTable */ .chroma .lntable {
  border-spacing: 0;
  padding: 0;
  margin: 0;
  border: 0;
}

/* LineHighlight */ .chroma .hl {
  @apply bg-syd2;
  @apply dark:bg-nord5;
}

/* LineNumbersTable */ .chroma .lnt {
  white-space: pre;
  -webkit-user-select: none;
  user-select: none;
  margin-right: 0.4em;
  padding: 0 0.4em 0 0.4em;

  @apply text-syd3;
  @apply dark:text-nord6;
}

/* LineNumbers */ .chroma .ln {
  white-space: pre;
  -webkit-user-select: none;
  user-select: none;
  margin-right: 0.4em;
  padding: 0 0.4em 0 0.4em;

  @apply text-syd3;
  @apply dark:text-nord6;
}

/* Line */ .chroma .line {
  display: flex;
}

/* Keyword */ .chroma .k {
  @apply text-syd7;
  @apply dark:text-nord7;
}

/* KeywordConstant */ .chroma .kc {
  @apply text-syd7;
  @apply dark:text-nord7;
}

/* KeywordDeclaration */ .chroma .kd {
  @apply text-syd7;
  @apply dark:text-nord7;
}

/* KeywordNamespace */ .chroma .kn {
  @apply text-syd7;
  @apply dark:text-nord7;
}

/* KeywordPseudo */ .chroma .kp {
  @apply text-syd7;
  @apply dark:text-nord7;
}

/* KeywordReserved */ .chroma .kr {
  @apply text-syd8;
  @apply dark:text-nord7;
}

/* KeywordType */ .chroma .kt {
  @apply text-syd7;
  @apply dark:text-nord7;
}

/* Name */ .chroma .n {
  @apply text-syd9;
  @apply dark:text-nord9;
}

/* NameAttribute */ .chroma .na {
  @apply text-syd8;
  @apply dark:text-nord10;
}

/* NameBuiltin */ .chroma .nb {
  @apply text-syd7;
  @apply dark:text-nord7;
}

/* NameBuiltinPseudo */ .chroma .bp {
  @apply text-syd9;
  @apply dark:text-nord3;
}

/* NameClass */ .chroma .nc {
  @apply text-syd9;
  @apply dark:text-nord10;
}

/* NameConstant */ .chroma .no {
  @apply text-syd9;
  @apply dark:text-nord10;
}

/* NameDecorator */ .chroma .nd {
  @apply text-syd9;
  @apply dark:text-nord8;
}

/* NameEntity */ .chroma .ni {
  @apply text-syd9;
  @apply dark:text-nord8;
}

/* NameException */ .chroma .ne {
  @apply text-syd9;
  @apply dark:text-nord4;
}

/* NameFunction */ .chroma .nf {
  @apply text-syd10;
  @apply dark:text-nord11;
}

/* NameFunctionMagic */ .chroma .fm {
  @apply text-syd9;
  @apply dark:text-nord3;
}

/* NameLabel */ .chroma .nl {
  @apply text-syd9;
  @apply dark:text-nord10;
}

/* NameNamespace */ .chroma .nn {
  @apply text-syd9;
  @apply dark:text-nord10;
}

/* NameOther */ .chroma .nx {
  @apply text-syd7;
  @apply dark:text-nord3;
}

/* NameProperty */ .chroma .py {
  @apply text-syd9;
  @apply dark:text-nord10;
}

/* NameTag */ .chroma .nt {
  @apply text-syd9;
  @apply dark:text-nord7;
}

/* NameVariable */ .chroma .nv {
  @apply text-syd9;
  @apply dark:text-nord3;
}

/* NameVariableClass */ .chroma .vc {
  @apply text-syd9;
  @apply dark:text-nord3;
}

/* NameVariableGlobal */ .chroma .vg {
  @apply text-syd9;
  @apply dark:text-nord3;
}

/* NameVariableInstance */ .chroma .vi {
  @apply text-syd9;
  @apply dark:text-nord3;
}

/* NameVariableMagic */ .chroma .vm {
  @apply text-syd9;
  @apply dark:text-nord3;
}

/* Literal */ .chroma .l {
  /* Intentionally empty */
}

/* LiteralDate */ .chroma .ld {
  /* Intentionally empty */
}

/* LiteralString */ .chroma .s {
  @apply text-syd11;
  @apply dark:text-nord12;
}

/* LiteralStringAffix */ .chroma .sa {
  @apply text-syd11;
  @apply dark:text-nord12;
}

/* LiteralStringBacktick */ .chroma .sb {
  @apply text-syd11;
  @apply dark:text-nord12;
}

/* LiteralStringChar */ .chroma .sc {
  @apply text-syd11;
  @apply dark:text-nord12;
}

/* LiteralStringDelimiter */ .chroma .dl {
  @apply text-syd11;
  @apply dark:text-nord12;
}

/* LiteralStringDoc */ .chroma .sd {
  @apply text-syd11;
  @apply dark:text-nord13;
}

/* LiteralStringDouble */ .chroma .s2 {
  @apply text-syd11;
  @apply dark:text-nord12;
}

/* LiteralStringEscape */ .chroma .se {
  @apply text-syd11;
  @apply dark:text-nord14;
}

/* LiteralStringHeredoc */ .chroma .sh {
  @apply text-syd11;
  @apply dark:text-nord12;
}

/* LiteralStringInterpol */ .chroma .si {
  @apply text-syd11;
  @apply dark:text-nord12;
}

/* LiteralStringOther */ .chroma .sx {
  @apply text-syd11;
  @apply dark:text-nord12;
}

/* LiteralStringRegex */ .chroma .sr {
  @apply text-syd11;
  @apply dark:text-nord14;
}

/* LiteralStringSingle */ .chroma .s1 {
  @apply text-syd11;
  @apply dark:text-nord12;
}

/* LiteralStringSymbol */ .chroma .ss {
  @apply text-syd11;
  @apply dark:text-nord12;
}

/* LiteralNumber */ .chroma .m {
  @apply text-syd5;
  @apply dark:text-nord15;
}

/* LiteralNumberBin */ .chroma .mb {
  @apply text-syd5;
  @apply dark:text-nord15;
}

/* LiteralNumberFloat */ .chroma .mf {
  @apply text-syd5;
  @apply dark:text-nord15;
}

/* LiteralNumberHex */ .chroma .mh {
  @apply text-syd5;
  @apply dark:text-nord15;
}

/* LiteralNumberInteger */ .chroma .mi {
  @apply text-syd5;
  @apply dark:text-nord15;
}

/* LiteralNumberIntegerLong */ .chroma .il {
  @apply text-syd5;
  @apply dark:text-nord15;
}

/* LiteralNumberOct */ .chroma .mo {
  @apply text-syd5;
  @apply dark:text-nord15;
}

/* Operator */ .chroma .o {
  @apply text-syd7;
  @apply dark:text-nord7;
}

/* OperatorWord */ .chroma .ow {
  @apply text-syd7;
  @apply dark:text-nord7;
}

/* Punctuation */ .chroma .p {
  @apply text-syd3;
  @apply dark:text-nord16;
}

/* Comment */ .chroma .c {
  @apply text-syd6;
  @apply dark:text-nord17;
  @apply italic;
}

/* CommentHashbang */ .chroma .ch {
  @apply text-syd6;
  @apply dark:text-nord17;
  @apply italic;
}

/* CommentMultiline */ .chroma .cm {
  @apply text-syd6;
  @apply dark:text-nord17;
  @apply italic;
}

/* CommentSingle */ .chroma .c1 {
  @apply text-syd6;
  @apply dark:text-nord17;
  @apply italic;
}

/* CommentSpecial */ .chroma .cs {
  @apply text-syd6;
  @apply dark:text-nord17;
  @apply italic;
}

/* CommentPreproc */ .chroma .cp {
  @apply text-syd7;
  @apply dark:text-nord18;
  @apply italic;
}

/* CommentPreprocFile */ .chroma .cpf {
  @apply text-syd7;
  @apply dark:text-nord18;
  @apply italic;
}

/* Generic */ .chroma .g {
  /* Intentionally empty */
}

/* GenericDeleted */ .chroma .gd {
  @apply text-syd4;
  @apply dark:text-nord4;
}

/* GenericEmph */ .chroma .ge {
  /* Intentionally empty */
}

/* GenericError */ .chroma .gr {
  @apply text-syd4;
  @apply dark:text-nord4;
}

/* GenericHeading */ .chroma .gh {
  @apply text-syd3;
  @apply dark:text-nord11;
}

/* GenericInserted */ .chroma .gi {
  @apply text-syd9;
  @apply dark:text-nord12;
}

/* GenericOutput */ .chroma .go {
  /* Intentionally empty */
}

/* GenericPrompt */ .chroma .gp {
  @apply text-syd9;
  @apply dark:text-nord17;
}

/* GenericStrong */ .chroma .gs {
  /* Intentionally empty */
}

/* GenericSubheading */ .chroma .gu {
  @apply text-syd3;
  @apply dark:text-nord11;
}

/* GenericTraceback */ .chroma .gt {
  @apply text-syd4;
  @apply dark:text-nord4;
}

/* GenericUnderline */ .chroma .gl {
  /* Intentionally empty */
}

/* TextWhitespace */ .chroma .w {
  /* Intentionally empty */
}
